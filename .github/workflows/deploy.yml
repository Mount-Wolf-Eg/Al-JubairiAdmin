name: Deploy Aljubairi Admin

on:
  push:
    branches:
      - main
      - dev
      
env:
  GITHUB_ACTOR: 'DiaaMagdi'
  REMOTE_USER: 'ubuntu'
  REMOTE_HOST: 'ec2-18-188-27-139.us-east-2.compute.amazonaws.com'
  GITHUB_REPO: 'github.com/Mount-Wolf-Eg/Al-JubairiAdmin.git'
  PJ_BASE_PATH: '/var/www/html'
  PJ_DIR_NAME: 'Al-JubairiAdmin'
  PJ_BUILD_DIR_NAME: 'dist'
  PJ_PKG_INSTALL_DIR_NAME: 'node_modules'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up SSH for Development
      if: github.ref == 'refs/heads/main'
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.MW_TESTING_EC2 }}

    - name: Deploy to Development Server
      id: clone_and_build_app
      if: github.ref == 'refs/heads/main'
      run: |
        # set -x

        echo "=============================================="
        echo "====== CREATING AND SENDING TEMP_SCRIPT"
        echo "=============================================="


        cat << EOF > temp_script.sh
        export GITHUB_ACTOR="$GITHUB_ACTOR"
        export REMOTE_USER="$REMOTE_USER"
        export REMOTE_HOST="$REMOTE_HOST"
        export GITHUB_REPO="$GITHUB_REPO"
        export PJ_BASE_PATH="$PJ_BASE_PATH"
        export PJ_DIR_NAME="$PJ_DIR_NAME"
        export PJ_BUILD_DIR_NAME="$PJ_BUILD_DIR_NAME"
        export PJ_PKG_INSTALL_DIR_NAME="$PJ_PKG_INSTALL_DIR_NAME"
        EOF


        echo "=============================================="
        echo "====== INTERACTING WITH THE SERVER"
        echo "=============================================="


        scp -o StrictHostKeyChecking=no temp_script.sh $REMOTE_USER@$REMOTE_HOST:/tmp/temp_script.sh
        ssh -o StrictHostKeyChecking=no $REMOTE_USER@$REMOTE_HOST << 'EOF'
        # set -x
        source /tmp/temp_script.sh


        echo "=============================================="
        echo "====== PULLING LATEST UPDATES"
        echo "=============================================="


        if ! test -d $PJ_BASE_PATH/$PJ_DIR_NAME/; then
          sudo mkdir -p $PJ_BASE_PATH
          cd $PJ_BASE_PATH
          sudo git clone https://$GITHUB_ACTOR:${{ secrets.PERSONAL_ACCESS_TOKEN }}@$GITHUB_REPO

          sudo chown -R $REMOTE_USER:$REMOTE_USER $PJ_BASE_PATH/$PJ_DIR_NAME
        fi
        cd $PJ_BASE_PATH/$PJ_DIR_NAME
        git add .
        git reset --hard
        git checkout main
        git pull https://$GITHUB_ACTOR:${{ secrets.PERSONAL_ACCESS_TOKEN }}@$GITHUB_REPO


        echo "=============================================="
        echo "====== INSTALLING PACKAGES & DEPENDENCIES"
        echo "=============================================="


        [[ -s $HOME/.nvm/nvm.sh ]] && . $HOME/.nvm/nvm.sh
        nvm use v20.7.0
        npm -v
        rm -rf $PJ_BASE_PATH/$PJ_DIR_NAME/$PJ_PKG_INSTALL_DIR_NAME
        npm install --force


        echo "=============================================="
        echo "====== BUILDING THE CODE"
        echo "=============================================="


        rm -rf $PJ_BASE_PATH/$PJ_DIR_NAME/$PJ_BUILD_DIR_NAME
        npm run build
        sudo systemctl restart nginx


        echo "=============================================="
        echo "====== CLEANING AND EXITING"
        echo "=============================================="


        rm /tmp/temp_script.sh
        EOF
        rm temp_script.sh

    - name: Set Output Using PowerShell
      id: pwsh_file_exists_result
      shell: pwsh
      run: |
        
        $command = "test -f $env:PJ_BASE_PATH/$env:PJ_DIR_NAME/$env:PJ_BUILD_DIR_NAME/index.html && echo 'exists' || echo 'missing'"
        $result = ssh -o StrictHostKeyChecking=no $env:REMOTE_USER@$env:REMOTE_HOST "$command"
        Write-Output ":: COMMAND OUTPUT RESULT ::"
        Write-Output $result

        Write-Output ":: ENTERING OUTPUT STATEMENT ::"
        $output = "index_file_exists=$result"
        $output | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8

    - name: Echo Output Variable
      run: |
        echo "pwsh_file_exists_result: ${{ steps.pwsh_file_exists_result.outputs.index_file_exists }}"

    - name: Check Success
      if: ${{ steps.pwsh_file_exists_result.outputs.index_file_exists != 'exists' }}
      uses: actions/github-script@v3
      with:
        script: |
          core.setFailed('Index File Not Found')